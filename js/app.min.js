(()=>{var __webpack_modules__={"./src/js/app.js":()=>{eval("\nconst toogleBurgerMenu = () => {\n    const body = document.querySelector('.body')\n    const burgerMenu = document.querySelector('.burger-menu')\n    const buttonList = document.querySelector('.header__buttons')\n\n\n    const burgerClickHandler = () => {\n        body.classList.toggle('body--lock')\n        burgerMenu.classList.toggle('burger-menu--active')\n        buttonList.classList.toggle('header__buttons--active')\n    }\n    const linkClickHandler = () => {\n\n        body.classList.remove('body--lock')\n        burgerMenu.classList.remove('burger-menu--active')\n        buttonList.classList.remove('header__buttons--active')\n    }\n\n    burgerMenu.addEventListener('click', burgerClickHandler)\n    buttonList.addEventListener('click', linkClickHandler)\n}\n\ntoogleBurgerMenu()\n\nclass ItcCustomSelect {\n    static EL = 'itc-select';\n    static EL_SHOW = 'itc-select_show';\n    static EL_OPTION = 'itc-select__option';\n    static EL_OPTION_SELECTED = 'itc-select__option_selected';\n    static DATA = '[data-select]';\n    static DATA_TOGGLE = '[data-select=\"toggle\"]';\n\n    static template(params) {\n        const { name, options, targetValue } = params;\n        const items = [];\n        let selectedIndex = -1;\n        let selectedValue = '';\n        let selectedContent = 'Выберите из списка';\n        options.forEach((option, index) => {\n            let selectedClass = '';\n            if (option[0] === targetValue) {\n                selectedClass = ` ${this.EL_OPTION_SELECTED}`;\n                selectedIndex = index;\n                selectedValue = option[0];\n                selectedContent = option[1];\n            }\n            items.push(`<li class=\"itc-select__option${selectedClass}\" data-select=\"option\"\n          data-value=\"${option[0]}\" data-index=\"${index}\">${option[1]}</li>`);\n        });\n        return `<button type=\"button\" class=\"itc-select__toggle\" name=\"${name}\"\n        value=\"${selectedValue}\" data-select=\"toggle\" data-index=\"${selectedIndex}\">\n        ${selectedContent}</button><div class=\"itc-select__dropdown\">\n        <ul class=\"itc-select__options\">${items.join('')}</ul></div>`;\n    }\n\n    static hideOpenSelect() {\n        document.addEventListener('click', (e) => {\n            if (!e.target.closest(`.${this.EL}`)) {\n                const elsActive = document.querySelectorAll(`.${this.EL_SHOW}`);\n                elsActive.forEach((el) => {\n                    el.classList.remove(this.EL_SHOW);\n                });\n            }\n        });\n    }\n    static create(target, params) {\n        this._el = typeof target === 'string' ? document.querySelector(target) : target;\n        if (this._el) {\n            return new this(target, params);\n        }\n        return null;\n    }\n    constructor(target, params) {\n        this._el = typeof target === 'string' ? document.querySelector(target) : target;\n        this._params = params || {};\n        this._onClickFn = this._onClick.bind(this);\n        if (this._params.options) {\n            this._el.innerHTML = this.constructor.template(this._params);\n            this._el.classList.add(this.constructor.EL);\n        }\n        this._elToggle = this._el.querySelector(this.constructor.DATA_TOGGLE);\n        this._el.addEventListener('click', this._onClickFn);\n    }\n\n    _onClick(e) {\n        const { target } = e;\n        const type = target.closest(this.constructor.DATA).dataset.select;\n        if (type === 'toggle') {\n            this.toggle();\n        } else if (type === 'option') {\n            this._changeValue(target);\n        }\n    }\n\n    _updateOption(el) {\n        const elOption = el.closest(`.${this.constructor.EL_OPTION}`);\n        const elOptionSel = this._el.querySelector(`.${this.constructor.EL_OPTION_SELECTED}`);\n        if (elOptionSel) {\n            elOptionSel.classList.remove(this.constructor.EL_OPTION_SELECTED);\n        }\n        elOption.classList.add(this.constructor.EL_OPTION_SELECTED);\n        this._elToggle.textContent = elOption.textContent;\n        this._elToggle.value = elOption.dataset.value;\n        this._elToggle.dataset.index = elOption.dataset.index;\n        this._el.dispatchEvent(new CustomEvent('itc.select.change'));\n        this._params.onSelected ? this._params.onSelected(this, elOption) : null;\n        return elOption.dataset.value;\n    }\n\n    _reset() {\n        const selected = this._el.querySelector(`.${this.constructor.EL_OPTION_SELECTED}`);\n        if (selected) {\n            selected.classList.remove(this.constructor.EL_OPTION_SELECTED);\n        }\n        this._elToggle.textContent = 'Выберите из списка';\n        this._elToggle.value = '';\n        this._elToggle.dataset.index = '-1';\n        this._el.dispatchEvent(new CustomEvent('itc.select.change'));\n        this._params.onSelected ? this._params.onSelected(this, null) : null;\n        return '';\n    }\n\n    _changeValue(el) {\n        if (el.classList.contains(this.constructor.EL_OPTION_SELECTED)) {\n            return;\n        }\n        this._updateOption(el);\n        this.hide();\n    }\n\n    show() {\n        document.querySelectorAll(this.constructor.EL_SHOW)\n            .forEach((el) => {\n                el.classList.remove(this.constructor.EL_SHOW);\n            });\n        this._el.classList.add(`${this.constructor.EL_SHOW}`);\n    }\n\n    hide() {\n        this._el.classList.remove(this.constructor.EL_SHOW);\n    }\n\n    toggle() {\n        this._el.classList.contains(this.constructor.EL_SHOW) ? this.hide() : this.show();\n    }\n\n    dispose() {\n        this._el.removeEventListener('click', this._onClickFn);\n    }\n\n    get value() {\n        return this._elToggle.value;\n    }\n\n    set value(value) {\n        let isExists = false;\n        this._el.querySelectorAll('.select__option')\n            .forEach((option) => {\n                if (option.dataset.value === value) {\n                    isExists = true;\n                    this._updateOption(option);\n                }\n            });\n        if (!isExists) {\n            this._reset();\n        }\n    }\n\n    get selectedIndex() {\n        return this._elToggle.dataset.index;\n    }\n\n    set selectedIndex(index) {\n        const option = this._el.querySelector(`.select__option[data-index=\"${index}\"]`);\n        if (option) {\n            this._updateOption(option);\n        }\n        this._reset();\n    }\n}\n\nItcCustomSelect.hideOpenSelect();\n\nconst select1 = new ItcCustomSelect('#select-1');\nconst select2 = new ItcCustomSelect('#select-2');\n\n\n\n//# sourceURL=webpack://myproject/./src/js/app.js?")}},__webpack_exports__={};__webpack_modules__["./src/js/app.js"]()})();